{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteLocation": {
      "defaultValue": "UK South",
      "type": "string"
    },
    "OriginDomain": {
      "type": "string",
      "minLength": 11,
      "maxLength": 2083,
      "metadata": {
        "description": "Defines an origin domain to be used for Cross-Origin Resource Sharing (CORS)"
      }
    }
  },
  "variables": {
    "AppServicePlanName": "[concat('AppServicePlan', uniqueString(resourceGroup().id))]",
    "StorageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "StorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
    "FunctionName": "[concat('Function', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "apiVersion": "2016-01-01",
      "dependsOn": [],
      "kind": "Storage",
      "location": "[parameters('siteLocation')]",
      "name": "[variables('StorageAccountName')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "tags": {
        "displayName": "StorageName"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('siteLocation')]",
      "name": "[variables('AppServicePlanName')]",
      "properties": {
        "name": "[variables('AppServicePlanName')]",
        "numberOfWorkers": 1
      },
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "tags": {
        "displayName": "AppServicePlan"
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2016-08-01",
      "kind": "functionapp",
      "location": "[parameters('siteLocation')]",
      "name": "[variables('FunctionName')]",
      "properties": {
        "name": "[variables('FunctionName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "siteConfig": {
          //"appSettings": [
          //  {
          //    "name": "AzureWebJobsDashboard",
          //    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]"
          //  },
          //  {
          //    "name": "AzureWebJobsStorage",
          //    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]"
          //  },
          //  {
          //    "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
          //    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]"
          //  },
          //  {
          //    "name": "WEBSITE_CONTENTSHARE",
          //    "value": "[toLower(variables('FunctionName'))]"
          //  },
          //  {
          //    "name": "FUNCTIONS_EXTENSION_VERSION",
          //    "value": "~1"
          //  },
          //  {
          //    "name": "PROJECT",
          //    "value": "AzContactForm.FunctionApp"
          //  },
          //  {
          //    "name": "StorageConnection",
          //    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]"
          //  }
          //],
          //"cors": {
          //  "allowedOrigins": [
          //    "[parameters('OriginDomain')]"
          //  ]
          //}
        }
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('FunctionName'))]"
          ],
          "properties": {
            "RepoUrl": "https://github.com/tmutton/AzContactForm.git",
            "branch": "master",
            "IsManualIntegration": true
          }
        },
        {
          "apiVersion": "2016-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('FunctionName'))]"
          ],
          "properties": {
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
            "FUNCTIONS_EXTENSION_VERSION": "~1",
            "PROJECT": "AzContactForm.FunctionApp",
            "StorageConnection": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountId'),'2015-05-01-preview').key1)]"
          }
        },
        {
          "apiVersion": "2016-08-01",
          "name": "cors",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('FunctionName'))]"
          ],
          "allowedOrigins": ["http://test.com"]
        }
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName')))]": "Resource",
        "displayName": "AzContactFormFunction"
      },
      "type": "Microsoft.Web/sites",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ]
    }
  ],
  "outputs": {}
}
